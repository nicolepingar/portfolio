{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Desktop\\\\Bootcamp\\\\homework\\\\portfolio\\\\client\\\\src\\\\components\\\\pages\\\\contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form';\nimport \"./style.css\";\nimport { validateEmail } from \"../../utils/helpers\"; // export default function Contact() {\n//     const [fullName, setFullName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [message, setMessage] = useState('');\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         return name === \"fullName\" ? setFullName(value) : name === \"email\" ? setEmail(value) : setMessage(value);\n//     }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [status, setStatus] = useState(\"Submit\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    name.value = \"\";\n    email.value = \"\";\n    message.value = \"\";\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container-center\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"about-title\",\n          children: \"Get in Touch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please email me at nicolepingar@gmail.com or send me a message by filling out the form below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          lg: 6,\n          sm: 12,\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          lg: 6,\n          sm: 12,\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          id: \"message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button6\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          type: \"submit\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"qESKK7LDpFTuMSR0UrKu+hcLdmU=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Desktop/Bootcamp/homework/portfolio/client/src/components/pages/contact.js"],"names":["React","useState","Container","Row","Col","Form","validateEmail","Contact","status","setStatus","handleSubmit","e","preventDefault","name","email","message","target","elements","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,qBAA9B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,QAAD,CAApC;;AACA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,YAAD,CAAT;AACA,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2BJ,CAAC,CAACK,MAAF,CAASC,QAA1C;AACA,QAAIC,OAAO,GAAG;AACVL,MAAAA,IAAI,EAAEA,IAAI,CAACM,KADD;AAEVL,MAAAA,KAAK,EAAEA,KAAK,CAACK,KAFH;AAGVJ,MAAAA,OAAO,EAAEA,OAAO,CAACI;AAHP,KAAd;AAKA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF+C;AAKxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALkD,KAAlC,CAA1B;AAOAL,IAAAA,IAAI,CAACM,KAAL,GAAa,EAAb;AACAL,IAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;AACAJ,IAAAA,OAAO,CAACI,KAAR,GAAgB,EAAhB;AACAV,IAAAA,SAAS,CAAC,QAAD,CAAT;AACA,QAAIkB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,KAAK,CAACF,MAAM,CAACnB,MAAR,CAAL;AACH,GAtBD;;AAwBA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEN,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,EAAhC;AAAoC,UAAA,SAAS,EAAC,MAA9C;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,EAAE,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEA,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,EAAhC;AAAoC,UAAA,SAAS,EAAC,MAA9C;AAAqD,UAAA,SAAS,EAAC,2BAA/D;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,8BAAvC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAE,CAAlC;AAAqC,UAAA,EAAE,EAAC,SAAxC;AAAkD,UAAA,QAAQ;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAA,qCAAa;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,MAAM,EAAC,QAAnC;AAA4C,UAAA,GAAG,EAAC,UAAhD;AAA2D,UAAA,IAAI,EAAC,QAAhE;AAAA,oBAA0EI;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAjDD;;GAAMD,O;;KAAAA,O;AAmDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport \"./style.css\";\r\nimport { validateEmail } from \"../../utils/helpers\";\r\n\r\n// export default function Contact() {\r\n//     const [fullName, setFullName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [message, setMessage] = useState('');\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         return name === \"fullName\" ? setFullName(value) : name === \"email\" ? setEmail(value) : setMessage(value);\r\n//     }\r\nconst Contact = () => {\r\n    const [status, setStatus] = useState(\"Submit\");\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setStatus(\"Sending...\");\r\n        const { name, email, message } = e.target.elements;\r\n        let details = {\r\n            name: name.value,\r\n            email: email.value,\r\n            message: message.value,\r\n        };\r\n        let response = await fetch(\"http://localhost:5000/contact\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n            body: JSON.stringify(details),\r\n        });\r\n        name.value = \"\";\r\n        email.value = \"\";\r\n        message.value = \"\";\r\n        setStatus(\"Submit\");\r\n        let result = await response.json();\r\n        alert(result.status);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-center\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row className=\"mb-3\">\r\n                    <h2 className=\"about-title\">Get in Touch</h2>\r\n                    <p>Please email me at nicolepingar@gmail.com or send me a message by filling out the form below:</p>\r\n                    <Form.Group as={Col} lg={6} sm={12} className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"name\">Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"name\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={6} sm={12} className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                        <Form.Control type=\"email\" id=\"email\" />\r\n                    </Form.Group>\r\n                </Row>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label htmlFor=\"message\">Message</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} id=\"message\" required />\r\n                </Form.Group>\r\n                <Form.Group> <button className=\"button6\" target=\"_blank\" rel=\"noopener\" type=\"submit\">{status}</button></Form.Group>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}